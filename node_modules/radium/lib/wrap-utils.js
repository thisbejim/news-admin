/* @flow */

'use strict';

module.exports = {
  getInitialState: function getInitialState() {
    return { _radiumStyleState: {} };
  },

  componentWillUnmount: function componentWillUnmount(component) {
    if (component._radiumMouseUpListener) {
      component._radiumMouseUpListener.remove();
    }

    if (component._radiumMediaQueryListenersByQuery) {
      Object.keys(component._radiumMediaQueryListenersByQuery).forEach(function (query) {
        component._radiumMediaQueryListenersByQuery[query].remove();
      }, component);
    }
  }
};